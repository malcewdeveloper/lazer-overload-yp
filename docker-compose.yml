version: "3.9"

services:
    client:
        container_name: lazer-overload-client
        image: lazer-overload-client
        build:
            context: .
            dockerfile: Dockerfile.client
            args:
                CLIENT_PORT: ${CLIENT_PORT}
        restart: always
        ports:
            - "${CLIENT_PORT}:80"
        environment:
            - CLIENT_PORT=${CLIENT_PORT}
            - SERVER_PORT=${SERVER_PORT}
        depends_on:
            - server
        networks:
            - lazer-overload-network
    server:
        container_name: lazer-overload-server
        image: lazer-overload-server
        build:
            context: .
            dockerfile: Dockerfile.server
            args:
                SERVER_PORT: ${SERVER_PORT}
        restart: always
        ports:
            - "${SERVER_PORT}:${SERVER_PORT}"
        environment:
            SERVER_PORT: ${SERVER_PORT}
            POSTGRES_HOST: 'postgres'
            POSTGRES_PORT: ${POSTGRES_PORT}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_DB: ${POSTGRES_DB}
        depends_on:
            - postgres
        networks:
            - lazer-overload-network

    postgres:
        image: postgres:14
        ports:
            - "${POSTGRES_PORT}:${POSTGRES_PORT}"
        environment:
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_DB: ${POSTGRES_DB}
        networks:
            - lazer-overload-network
        volumes:
            - ./tmp/pgdata:/var/lib/postgresql/data
networks:
    lazer-overload-network:
        driver: bridge
